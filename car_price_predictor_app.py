# -*- coding: utf-8 -*-
"""Car_Price_App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G_56Dxpfz19a8otrqaIzd0ncv2Iyp9g2
"""

import streamlit as st
import pickle
model = pickle.load(open('RF_car_price.pkl','rb'))


def main():
    
    st.title("CAR PRICE PREDICTOR")
    html_temp = """
    <div style="background-color:Teal;padding:10px">
    <h2 style="color:white;text-align:center;">Car Price Prediction ML App </h2>
    </div>
    """
    st.markdown(html_temp,unsafe_allow_html=True)
    st.markdown("##### Let's evaluate the price of the car, you wish to sell!")
    
    
    st.write('')
    st.write('')

    years = st.number_input('Purchase Year of the Car ',1990, 2021, step=1, key ='year')
    Years_old = 2021-years

    Present_Price = st.number_input('Current ex-showroom price of the Car (In â‚¹lakhs)', 0.00, 50.00, step=0.5, key ='present_price') 

    Kms_Driven = st.number_input('Distance completed by the car (In Kilometers)', 0.00, 500000.00, step=500.00, key ='drived')

    Owner = st.radio("Number of owners the car had previously ", (0, 1, 2 ,3), key='owner')

    Fuel_Type_Petrol = st.selectbox('Fuel type of the Car',('Petrol','Diesel', 'CNG'), key='fuel')
    if(Fuel_Type_Petrol=='Petrol'):
        Fuel_Type_Petrol=1
        Fuel_Type_Diesel=0
    elif(Fuel_Type_Petrol=='Diesel'):
        Fuel_Type_Petrol=0
        Fuel_Type_Diesel=1
    else:
        Fuel_Type_Petrol=0
        Fuel_Type_Diesel=0

    Seller_Type_Individual = st.selectbox('Are you a dealer or an individual ?', ('Dealer','Individual'), key='dealer')
    if(Seller_Type_Individual=='Individual'):
        Seller_Type_Individual=1
    else:
        Seller_Type_Individual=0	

    Transmission_Mannual = st.selectbox('Transmission Type', ('Manual','Automatic'), key='manual')
    if(Transmission_Mannual=='Mannual'):
        Transmission_Mannual=1
    else:
        Transmission_Mannual=0


    if st.button("Estimate Price", key='predict'):
        try:
            Model = model  #get_model()
            prediction = Model.predict([[Present_Price, Kms_Driven, Owner, Years_old, Fuel_Type_Diesel, Fuel_Type_Petrol, Seller_Type_Individual, Transmission_Mannual]])
            output = round(prediction[0],2)
            if output<0:
                st.warning("You will be not able to sell this car !!")
            else:
                st.success("You can sell the car for {} lakhs ".format(output))
        except:
            st.warning("Opps!! Something went wrong\nTry again")
            



if __name__ == "__main__":
    main()